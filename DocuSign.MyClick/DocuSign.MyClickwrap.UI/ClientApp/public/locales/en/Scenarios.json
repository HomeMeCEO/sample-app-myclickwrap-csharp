{
  "Title": "Choose your scenario",
  "Scenario3": {
    "Title": "Terms and Conditions",
    "Link": "/termsandconditions/",
    "Description": "Terms And Conditions Info",
    "Intro": "This scenario shows how the Click API can be used to embed the required consent for standard terms and conditions, including private policy, for any website.",
    "CodeFlow": "<strong class='text-uppercase'>Code flow:</strong><strong>Step 1</strong><p>When the form is submitted, the client-side code call the server side code to find the information needed for show the clickwrap.<br>The server get the list of all Clickwraps in the specified DocuSign account using the <a target='blank' href='https://developers.docusign.com/docs/click-api/reference/Accounts/ClickWraps/getClickwraps/'>ClickWraps:getClickwraps</a> API call. We then proceed to ensure we can find the desired clickwrap based on the ClickwrapName property.<br>Once the server gather all the information is sent back to the client, including the clickWrapID, the accountId, the email address and the baseUrl for DocuSign. To render the clickwrap on the site we make a javascript API call to <b>docuSignClick.Clickwrap.render()</b> method. That method takes four arguments: the environment (https://demo.docusign.net in our case), the <b>accountID</b> (GUID) of the DocuSign account, the <b>clickwrapId</b> (GUID) we found with the server API Call and the email address which is called <b>clientUserId</b>. In order to make this client-side API Call we need to include https://demo.docusign.net/clickapi/sdk/latest/docusign-click.js in our page as a script element.</p>"
  },
  "Scenario2": {
    "Title": "Non-disclosure agreement",
    "Link": "/nondisclosureagreement/",
    "Description": "Nondisclosure agreement Info",
    "Intro": "This scenario shows how the Click API can be used to build a simple tool to enable organizations to capture consent from for a standard non-disclosure agreement (NDA) on their own website or app.",
    "CodeFlow": "<strong class='text-uppercase'>Code flow:</strong><strong>Step 1</strong><p>When the form is submitted, the client-side code call the server side code to find the information needed for show the clickwrap.<br>The server get the list of all Clickwraps in the specified DocuSign account using the <a target='blank' href='https://developers.docusign.com/docs/click-api/reference/Accounts/ClickWraps/getClickwraps/'>ClickWraps:getClickwraps</a> API call. We then proceed to ensure we can find the desired clickwrap based on the ClickwrapName property.<br>Once the server gather all the information is sent back to the client, including the clickWrapID, the accountId, the email address and the baseUrl for DocuSign. To render the clickwrap on the site we make a javascript API call to <b>docuSignClick.Clickwrap.render()</b> method. That method takes four arguments: the environment (https://demo.docusign.net in our case), the <b>accountID</b> (GUID) of the DocuSign account, the <b>clickwrapId</b> (GUID) we found with the server API Call and the email address which is called <b>clientUserId</b>. In order to make this client-side API Call we need to include https://demo.docusign.net/clickapi/sdk/latest/docusign-click.js in our page as a script element.</p>"
  },
  "Scenario1": {
    "Title": "COVID-19 Health Declaration",
    "Link": "/covid19waiver/",
    "Description": "COVID-19 Health Declaration Info",
    "Intro": "This scenario shows how the Click API can be used to build a simple tool to enable organizations to capture consent from individuals releasing the organization from responsibility in case they contract COVID-19 while on their premises.",
    "CodeFlow": "<strong class='text-uppercase'>Code flow:</strong><strong>Step 1</strong><p>When the form is submitted, the client-side code call the server side code to find the information needed for show the clickwrap.<br>The server get the list of all Clickwraps in the specified DocuSign account using the <a target='blank' href='https://developers.docusign.com/docs/click-api/reference/Accounts/ClickWraps/getClickwraps/'>ClickWraps:getClickwraps</a> API call. We then proceed to ensure we can find the desired clickwrap based on the ClickwrapName property.<br>Once the server gather all the information is sent back to the client, including the clickWrapID, the accountId, the email address and the baseUrl for DocuSign. To render the clickwrap on the site we make a javascript API call to <b>docuSignClick.Clickwrap.render()</b> method. That method takes four arguments: the environment (https://demo.docusign.net in our case), the <b>accountID</b> (GUID) of the DocuSign account, the <b>clickwrapId</b> (GUID) we found with the server API Call and the email address which is called <b>clientUserId</b>. In order to make this client-side API Call we need to include https://demo.docusign.net/clickapi/sdk/latest/docusign-click.js in our page as a script element.</p>"
  },
  "TryMeButton": "Try Me"
}
